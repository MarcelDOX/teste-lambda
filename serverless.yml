service: teste-lambda-2
plugins:
  - serverless-dotenv-plugin
  - serverless-scriptable-plugin

custom:
  scriptable:
    hooks:
      'package:initialize': 'sh ./ci/create-prisma-layer.sh'

layers:
  prisma:
    path: .prisma-layer
    description: 'Layer for Prisma Clients'
    package:
      patterns:
        - '!nodejs/node_modules/@prisma/engines/*'
        - '!nodejs/node_modules/.prisma/**/libquery_engine-*'
        - 'nodejs/node_modules/.prisma/client/libquery_engine-rhel-openssl-1.0.x.so.node'
        - 'nodejs/node_modules/.prisma/**/libquery_engine-rhel-openssl-1.0.x.so.node'
        - '!nodejs/prisma/**'
        - 'nodejs/prisma/*.db'

provider:
  name: aws
  region: us-east-1
  runtime: nodejs14.x

functions:
  status:
    handler: handlers/status.handler
    events:
      - http:
          method: GET
          path: /
  seed:
    handler: handlers/seed.handler
    layers:
      - { Ref: PrismaLambdaLayer }
    events:
      - http:
          method: GET
          path: /seed
  getUsers:
    handler: handlers/users.handler
    layers:
      - { Ref: PrismaLambdaLayer }
    events:
      - http:
          method: GET
          path: /users
  createUser:
    handler: handlers/create-user.handler
    layers:
      - { Ref: PrismaLambdaLayer }
    events:
      - http:
          method: POST
          path: /users
  getPosts:
    handler: handlers/posts.handler
    layers:
      - { Ref: PrismaLambdaLayer }
    events:
      - http:
          method: GET
          path: /posts

package:
  patterns:
    - '!node_modules/prisma'
    - '!node_modules/.prisma'
    - '!node_modules/@prisma'
    - '!.prisma-layer'
    - '!prisma'
    - '!ci'
    - '!*.*'
